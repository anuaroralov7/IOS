import UIKit

struct CharacterItem {
    let imageName: String
    let name: String
    let role: String
    let age: String   // —Å—Ç—Ä–æ–∫–æ–π, —á—Ç–æ–±—ã –Ω–µ —Å–ø–æ—Ä–∏—Ç—å –æ –∫–∞–Ω–æ–Ω–µ üòä
    let bio: String
}

final class ViewController: UIViewController {

    @IBOutlet weak var imageView: UIImageView!
    @IBOutlet weak var nameLabel: UILabel!
    @IBOutlet weak var roleLabel: UILabel!
    @IBOutlet weak var ageLabel: UILabel!
    @IBOutlet weak var bioLabel: UILabel!
    
   
    
    private let items: [CharacterItem] = [
        .init(imageName: "Tanjiro",   name: "Tanjiro Kamado",   role: "Slayer (Water/Sun)",  age: "16", bio: "–î–æ–±—Ä—ã–π –∏ —É–ø—ë—Ä—Ç—ã–π –æ—Ö–æ—Ç–Ω–∏–∫. –û–±–æ–Ω—è–Ω–∏–µ –∏ —Ç–µ—Ö–Ω–∏–∫–∏ –í–æ–¥—ã/–°–æ–ª–Ω—Ü–∞."),
        .init(imageName: "Zenitsu",   name: "Zenitsu Agatsuma", role: "Slayer (Thunder)",    age: "16", bio: "–ü—É–≥–∞–µ—Ç—Å—è, –Ω–æ –≤–æ —Å–Ω–µ ‚Äî –º–æ–ª–Ω–∏–µ–Ω–æ—Å–Ω—ã–π –º–∞—Å—Ç–µ—Ä –ì—Ä–æ–º–∞."),
        .init(imageName: "Inosuke",   name: "Inosuke Hashibira",role: "Slayer (Beast)",      age: "15", bio: "–î–∏–∫–∏–π –±–æ–µ—Ü –≤ –∫–∞–±–∞–Ω—å–µ–π –º–∞—Å–∫–µ. –ò–Ω—Ç—É–∏—Ü–∏—è –∏ –ó–≤–µ—Ä–∏–Ω–æ–µ –¥—ã—Ö–∞–Ω–∏–µ."),

        .init(imageName: "Giyu",      name: "Giyu Tomioka",     role: "Hashira (Water)",     age: "21",    bio: "–°–ø–æ–∫–æ–π–Ω—ã–π –°—Ç–æ–ª–ø –í–æ–¥—ã. –ü–µ—Ä–≤—ã–π, –∫—Ç–æ –≤—Å—Ç—Ä–µ—Ç–∏–ª –¢–∞–Ω–¥–∑–∏—Ä–æ –∏ –ù—ç–¥–∑—É–∫–æ."),
        .init(imageName: "Shinobu",   name: "Shinobu Kocho",    role: "Hashira (Insect)",    age: "18",    bio: "–Ø–¥—ã, —Å–∫–æ—Ä–æ—Å—Ç—å –∏ —Ç–µ—Ö–Ω–∏–∫–∞ –ù–∞—Å–µ–∫–æ–º–æ–≥–æ. –û–ø–∞—Å–Ω–∞ –∑–∞ —É–ª—ã–±–∫–æ–π."),
        .init(imageName: "Kyojuro",   name: "Kyojuro Rengoku",  role: "Hashira (Flame)",     age: "20",    bio: "–ü—ã–ª–∞—é—â–µ–µ —Å–µ—Ä–¥—Ü–µ –∏ –æ–≥–Ω–µ–Ω–Ω–æ–µ –¥—ã—Ö–∞–Ω–∏–µ. –•–∞—Ä–∏–∑–º–∞ –∏ –æ—Ç–≤–∞–≥–∞."),
        .init(imageName: "Mitsuri",   name: "Mitsuri Kanroji",  role: "Hashira (Love)",      age: "19",    bio: "–¢—ë–ø–ª–∞—è, –Ω–æ —Å–≤–µ—Ä—Ö—Å–∏–ª—å–Ω–∞—è. –ì–∏–±–∫–æ—Å—Ç—å –∏ –ø–ª—ë—Ç–µ–≤–∏–¥–Ω—ã–π –∫–ª–∏–Ω–æ–∫."),
        .init(imageName: "Tengen",    name: "Tengen Uzui",      role: "Hashira (Sound)",     age: "23",    bio: "–ë–ª–∏—Å—Ç–∞—Ç–µ–ª—å–Ω—ã–π —à–∏–Ω–æ–±–∏. –¢–∞–∫—Ç–∏–∫–∞, –≤–∑—Ä—ã–≤—á–∞—Ç–∫–∞ –∏ –ó–≤—É–∫."),
        .init(imageName: "Muichiro",  name: "Muichiro Tokito",  role: "Hashira (Mist)",      age: "14", bio: "–ì–µ–Ω–∏–π-–º–æ–ª—á—É–Ω. –¢—É–º–∞–Ω–Ω–æ–µ –¥—ã—Ö–∞–Ω–∏–µ –∏ —Ñ–µ–Ω–æ–º–µ–Ω–∞–ª—å–Ω–∞—è —Ä–µ–∞–∫—Ü–∏—è."),
        .init(imageName: "Sanemi",    name: "Sanemi Shinazugawa", role: "Hashira (Wind)",    age: "21",    bio: "–í—Å–ø—ã–ª—å—á–∏–≤—ã–π, —Å–æ —à—Ä–∞–º–∞–º–∏. –ë–µ—Å–ø–æ—â–∞–¥–Ω—ã–π –°—Ç–æ–ª–ø –í–µ—Ç—Ä–∞."),
        .init(imageName: "Obanai",    name: "Obanai Iguro",     role: "Hashira (Serpent)",   age: "21",    bio: "–ë–∏–Ω—Ç—ã –∏ –≥–µ—Ç–µ—Ä–æ—Ö—Ä–æ–º–∏—è. –¢–µ—Ö–Ω–∏–∫–∏ –ó–º–µ–∏, –∑–º–µ—è –ö–∞–±—É—Ä–∞–º–∞—Ä—É."),
        .init(imageName: "Gyomei",    name: "Gyomei Himejima",  role: "Hashira (Stone)",     age: "27",    bio: "–°–∏–ª—å–Ω–µ–π—à–∏–π –°—Ç–æ–ª–ø. –°–ª–µ–ø–æ–π –º–æ–Ω–∞—Ö —Å —Ü–µ–ø–æ–º –∏ —Ç–æ–ø–æ—Ä–æ–º."),

        .init(imageName: "Akaza",     name: "Akaza",            role: "Upper Rank Three",    age: "‚Äî",    bio: "–ú–∞—Å—Ç–µ—Ä —Ä—É–∫–æ–ø–∞—à–Ω–æ–≥–æ –±–æ—è. ¬´–ö–æ–º–ø–∞—Å¬ª –¥–ª—è –¥–æ–±–∏–≤–∞–Ω–∏—è —Å–∏–ª—å–Ω—ã—Ö."),
        .init(imageName: "Doma",      name: "Doma",             role: "Upper Rank Two",      age: "‚Äî",    bio: "–õ–µ–¥–µ–Ω—è—â–∞—è –∫—Ä–æ–≤—å –∏ –∫—É–ª—å—Ç. –¢–µ—Ö–Ω–∏–∫–∏ –ª—å–¥–∞ –∏ —Ö–æ–ª–æ–¥–Ω–æ–µ —Å–µ—Ä–¥—Ü–µ."),
        .init(imageName: "Kokushibo", name: "Kokushibo",        role: "Upper Rank One",      age: "‚Äî",    bio: "–ë—ã–≤—à–∏–π –º–µ—á–Ω–∏–∫. –õ—É–Ω–Ω–æ–µ –¥—ã—Ö–∞–Ω–∏–µ –∏ –≤—Å–µ–≤–∏–¥—è—â–∏–µ –≥–ª–∞–∑–∞."),
        .init(imageName: "Gyutaro",   name: "Gyutaro",          role: "Upper Rank Six",      age: "‚Äî",    bio: "–°–º–µ—Ä—Ç–æ–Ω–æ—Å–Ω—ã–µ –∫–æ—Å—ã –∏ —è–¥—ã. –°—Ä–∞–∂–∞–µ—Ç—Å—è –≤ –ø–∞—Ä–µ —Å –î–∞–∫–∏."),
        .init(imageName: "Hantengu",  name: "Hantengu",         role: "Upper Rank Four",     age: "‚Äî",    bio: "–î–µ–ª–∏—Ç—Å—è –Ω–∞ —ç–º–æ—Ü–∏–∏-–∫–ª–æ–Ω—ã, –∫–∞–∂–¥–∞—è —Å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π —Å–∏–ª–æ–π."),
        .init(imageName: "Gyokko",    name: "Gyokko",           role: "Upper Rank Five",     age: "‚Äî",    bio: "–î–µ–º–æ–Ω-–≥–æ–Ω—á–∞—Ä. –í—ã–ª–∞–∑–∏—Ç –∏–∑ –∫—É–≤—à–∏–Ω–æ–≤ –∏ —Ç–≤–æ—Ä–∏—Ç —É—Ä–æ–¥–ª–∏–≤—ã–µ ¬´—Å–∫—É–ª—å–ø—Ç—É—Ä—ã¬ª."),
        .init(imageName: "Nakime",    name: "Nakime",           role: "Infinity Castle",     age: "‚Äî",    bio: "–ë–∏–≤–∞-–¥–µ–≤—É—à–∫–∞. –£–ø—Ä–∞–≤–ª—è–µ—Ç –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–º –∑–∞–º–∫–æ–º, –ø–µ—Ä–µ–º–µ—â–∞—è –∫–æ–º–Ω–∞—Ç—ã.")
    ]


    private var lastIndex: Int?

    override func viewDidLoad() {
        super.viewDidLoad()
        styleUI()
        showRandom(animated: false)
    }
 
    @IBAction func randomizeTapped(_ sender: UIButton) {
        showRandom(animated: true)
        let gen = UIImpactFeedbackGenerator(style: .soft)
        gen.impactOccurred()
    }

    private func showRandom(animated: Bool) {
        guard !items.isEmpty else { return }
        var idx: Int
        repeat { idx = Int.random(in: 0..<items.count) } while idx == lastIndex && items.count > 1
        lastIndex = idx

        let it = items[idx]

        let update = {
            self.imageView.image = UIImage(named: it.imageName)
            self.nameLabel.text = it.name
            self.roleLabel.text = it.role
            self.ageLabel.text  = it.age
            self.bioLabel.text  = it.bio
        }

        if animated {
            UIView.transition(with: self.view, duration: 0.25, options: .transitionCrossDissolve, animations: update, completion: nil)
        } else {
            update()
        }
    }


    private func styleUI() {
        
        view.backgroundColor = .systemBackground

        [roleLabel, ageLabel].forEach { label in
            label?.textColor = .white
            label?.backgroundColor = .systemIndigo
            label?.font = .systemFont(ofSize: 14, weight: .semibold)
            label?.layer.cornerRadius = 12
            label?.layer.masksToBounds = true
            label?.textAlignment = .center
            label?.setContentHuggingPriority(.required, for: .horizontal)
            label?.setContentCompressionResistancePriority(.required, for: .horizontal)
            label?.translatesAutoresizingMaskIntoConstraints = false
            if let l = label {
                l.heightAnchor.constraint(greaterThanOrEqualToConstant: 24).isActive = true
                l.widthAnchor.constraint(greaterThanOrEqualToConstant: 60).isActive = true
            }
        }

        nameLabel.font = .systemFont(ofSize: 28, weight: .bold)
        nameLabel.textAlignment = .center

        bioLabel.textColor = .secondaryLabel
        bioLabel.numberOfLines = 0
        bioLabel.textAlignment = .center
    }
}


